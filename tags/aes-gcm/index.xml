<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aes Gcm on Thought for your thoughts</title>
    <link>https://ludvigknutsmark.github.io/tags/aes-gcm/</link>
    <description>Recent content in Aes Gcm on Thought for your thoughts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Thu, 09 May 2019 16:08:35 +0200</lastBuildDate>
    
	<atom:link href="https://ludvigknutsmark.github.io/tags/aes-gcm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Breaking AES GCM part 2</title>
      <link>https://ludvigknutsmark.github.io/posts/breaking_aes_gcm_part2/</link>
      <pubDate>Thu, 09 May 2019 16:08:35 +0200</pubDate>
      
      <guid>https://ludvigknutsmark.github.io/posts/breaking_aes_gcm_part2/</guid>
      <description>In the first part I discussed some background on why AES GCM exists. GCM stands for Galois Counter Mode. Now we will take a dive into the Galois part!
Galois Field Galois field, or finite field is a set in which the basic math operations are defined - addition, subtraction, multiplication and division. There is obviously a lot of rules for a field, but a major one is that the field must be isomorphic, i.</description>
    </item>
    
    <item>
      <title>Breaking AES GCM Part 1</title>
      <link>https://ludvigknutsmark.github.io/posts/breaking_aes_gcm_part1/</link>
      <pubDate>Sun, 05 May 2019 15:11:55 +0200</pubDate>
      
      <guid>https://ludvigknutsmark.github.io/posts/breaking_aes_gcm_part1/</guid>
      <description>This is a small two-part series where I will show some attacks and implementation of AES GCM, and why GCM is a good idea. Let&amp;rsquo;s get started!
Why does AES GCM exist? So it seems like AES is a bit complicated. Most people see AES and think - &amp;ldquo;Great! This can&amp;rsquo;t be broken&amp;rdquo;.
And sure, it isn&amp;rsquo;t feasible in any amount of time to get the key from a ciphertext, even when knowing the plaintext.</description>
    </item>
    
  </channel>
</rss>