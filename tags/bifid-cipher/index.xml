<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bifid cipher on Thought for your thoughts</title>
    <link>https://ludvigknutsmark.github.io/tags/bifid-cipher/</link>
    <description>Recent content in Bifid cipher on Thought for your thoughts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Wed, 01 May 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ludvigknutsmark.github.io/tags/bifid-cipher/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The Cleaver</title>
      <link>https://ludvigknutsmark.github.io/writeups/the_cleaver/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ludvigknutsmark.github.io/writeups/the_cleaver/</guid>
      <description>Solves: 2 Challenge Description The challenge supplied source code to a bifid cipher and a ciphertext.txt
Ciphertext  BYOITAAVOBSOSODVZTEOUBFNCBSOTONVGP Source code #!/usr/bin/python import numpy as np class BifidCipher(): def __init__(self, key=None): if key is None: key = self.genKey() self.key = key def genKey(self): ALPHABET = &amp;quot;ABCDEFGHIKLMNOPQRSTUVWXYZ&amp;quot; matrix = np.random.choice(range(len(ALPHABET)),(5,5), replace=False) key = [] for i in range(5): row = [] for j in range(5): row.append(ALPHABET[matrix[i][j]]) key.append(row) return np.array(key) def encrypt(self, plaintext): plaintext = plaintext.</description>
    </item>
    
  </channel>
</rss>